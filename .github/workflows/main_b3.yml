name: Build and deploy ASP.Net Core app to Azure Web App - B3

on:
  push:
    branches:
      - main 
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.x'

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Angular dependencies
        working-directory: cdbWeb
        run: npm ci

      - name: Build Angular app
        working-directory: cdbWeb
        run: npm run build -- --configuration=production

      - name: Copy Angular dist to API wwwroot
        shell: pwsh
        run: |
            # Remove wwwroot existente
            Remove-Item -Recurse -Force "B3.API\wwwroot" -ErrorAction SilentlyContinue
    
            # Cria diretório destino
            New-Item -ItemType Directory -Path "B3.API\wwwroot" -Force
    
            # Copia APENAS os arquivos do /browser para a raiz do wwwroot
            Copy-Item -Path "cdbWeb\dist\cdb-web\browser\*" -Destination "B3.API\wwwroot" -Recurse -Force
    
            # Verifica a cópia
            $indexDest = "B3.API\wwwroot\index.html"
            if (!(Test-Path $indexDest) -or (Get-Item $indexDest).Length -eq 0) {
                Write-Error "Falha na cópia do index.html - arquivo vazio ou ausente"
                exit 1
            }
      - name: dotnet publish
        shell: pwsh
        run: |
            # Publica preservando wwwroot
            dotnet publish B3.API/B3.API/B3.API.csproj -c Release -o "${{env.DOTNET_ROOT}}/myapp" /p:DeleteExistingFiles=false
    
            # Verificação extra
            Write-Host "Conteúdo do index.html publicado:"
            Get-Content "${{env.DOTNET_ROOT}}/myapp/wwwroot/index.html" -Head 10

      - name: Build with dotnet
        run: dotnet build B3.API/B3.API.sln --configuration Release


      - name: Publish with wwwroot inclusion
        shell: pwsh
        run: |
          # Publica a aplicação
          dotnet publish B3.API/B3.API/B3.API.csproj -c Release -o "${{env.DOTNET_ROOT}}/myapp"
          
          # Garante que o wwwroot está no local correto
          if (-not (Test-Path "${{env.DOTNET_ROOT}}/myapp/wwwroot")) {
              Copy-Item -Path "B3.API\wwwroot" -Destination "${{env.DOTNET_ROOT}}/myapp/wwwroot" -Recurse -Force
          }

      - name: Verify published artifacts
        shell: pwsh
        run: |
          Write-Host "Verificando arquivos Angular em wwwroot:"
          $angularFiles = Get-ChildItem -Path "${{env.DOTNET_ROOT}}/myapp/wwwroot" -Recurse -File
          $angularFiles | Format-Table -AutoSize
          
          # Verifica se há algum arquivo Angular (mais flexível)
          if ($angularFiles.Count -eq 0) {
              Write-Error "Nenhum arquivo do Angular encontrado em wwwroot!"
              exit 1
          }
          Write-Host "Arquivos Angular verificados com sucesso!"

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy:
    runs-on: windows-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_8DB310D194E549EDAEE63FFD4ACCE025 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_2A355AA9F62F4B6D8BE19857D3969D56 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_DC15C30FD6CC4D6A8B1A793499BC115F }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'B3'
          slot-name: 'Production'
          package: .